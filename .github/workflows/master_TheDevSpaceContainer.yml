# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: CI/CD - container to Azure

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.AzureAppService_ContainerUsername_c2e0157d3aa147b680fe690b23616df3 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_65647285cdd74eb2897f8ba4eb83aa73 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername_c2e0157d3aa147b680fe690b23616df3 }}/thedevspace:${{ github.sha }}
        file: ./Dockerfile
        build-args: LICENSE_KEY=${{ secrets.LICENSE_KEY }}
        
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
        
    - name: Install EF Tool
      run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
            
    - name: Generate scripts
      run: dotnet ef migrations script --output ${{env.DOTNET_ROOT}}/sql/sql-script.sql --idempotent --context TheDevSpaceContext --startup-project src/TheDevSpaceWebApp/TheDevSpaceWebApp.csproj

    - name: Azure SQL Deploy - Staging
      uses: Azure/sql-action@v1.3
      with:
        server-name: tcp:thedevspacedb.database.windows.net
        connection-string: ${{ secrets.AZURE_SQL_STAGING_CONNECTION_STRING }}
        sql-file: ${{env.DOTNET_ROOT}}/sql/sql-script.sql

    - name: Azure SQL Deploy - Production
      uses: Azure/sql-action@v1.3
      with:
        server-name: tcp:thedevspacedb.database.windows.net
        connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
        sql-file: ${{env.DOTNET_ROOT}}/sql/sql-script.sql

  deploy-staging:
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'staging'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'TheDevSpace-Staging'
            slot-name: 'staging'
            publish-profile: ${{ secrets.AzureAppService_PublishProfile_c163f4de727c483ab4945d162b14a219 }}
            images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_9978c5d7be094409991fae15c83f852b }}/thedevspace:${{ github.sha }}'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'TheDevSpace'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_8a1bb95878c349ab821f0c4c7b330401 }}
        images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_c2e0157d3aa147b680fe690b23616df3 }}/thedevspace:${{ github.sha }}'
